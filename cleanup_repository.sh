#!/bin/bash
# Script de Limpeza do Reposit√≥rio GlobalAutomation
# Data: 23/09/2025
# Objetivo: Remover APIs duplicadas, vest√≠gios Docker e diret√≥rios n√£o usados

echo "========================================="
echo "üßπ LIMPEZA DO REPOSIT√ìRIO GLOBALAUTOMATION"
echo "========================================="
echo ""

# Verificar se est√° rodando como root/sudo
if [ "$EUID" -ne 0 ]; then
   echo "‚ùå Por favor, execute com sudo: sudo bash cleanup_repository.sh"
   exit 1
fi

# Diret√≥rio de backup
BACKUP_DIR="/home/globalauto/global/backups/cleanup_23sep"
echo "üìÅ Criando diret√≥rio de backup: $BACKUP_DIR"
mkdir -p $BACKUP_DIR

echo ""
echo "üîß FASE 1: Removendo APIs duplicadas/antigas"
echo "---------------------------------------------"

# Mover services/trading (API duplicada que confunde - 228MB)
if [ -d "/home/globalauto/global/services" ]; then
    echo "  ‚Üí Movendo services/ (API antiga da trading)..."
    mv /home/globalauto/global/services $BACKUP_DIR/
    echo "  ‚úÖ services/ movido"
fi

# Mover apps/api (outra API que confunde)
if [ -d "/home/globalauto/global/apps/api" ]; then
    echo "  ‚Üí Movendo apps/api/ (API antiga)..."
    mv /home/globalauto/global/apps/api $BACKUP_DIR/
    echo "  ‚úÖ apps/api/ movido"
fi

# Mover apps n√£o usados
for dir in web web-trading worker-exec worker-recon; do
    if [ -d "/home/globalauto/global/apps/$dir" ]; then
        echo "  ‚Üí Movendo apps/$dir/ (n√£o usado)..."
        mv /home/globalauto/global/apps/$dir $BACKUP_DIR/
        echo "  ‚úÖ apps/$dir/ movido"
    fi
done

echo ""
echo "üê≥ FASE 2: Removendo vest√≠gios do Docker"
echo "---------------------------------------------"

# Remover Dockerfiles √≥rf√£os
find /home/globalauto/global -name "Dockerfile*" -not -path "*/backups/*" -not -path "*/node_modules/*" -not -path "*/.git/*" | while read file; do
    echo "  ‚Üí Removendo: $file"
    mv "$file" $BACKUP_DIR/
done

# Remover docker-compose backup
if [ -f "/home/globalauto/global/docker-compose.backup.yml" ]; then
    echo "  ‚Üí Movendo docker-compose.backup.yml..."
    mv /home/globalauto/global/docker-compose.backup.yml $BACKUP_DIR/
    echo "  ‚úÖ docker-compose.backup.yml movido"
fi

# Remover .dockerignore se existir
if [ -f "/home/globalauto/global/.dockerignore" ]; then
    echo "  ‚Üí Movendo .dockerignore..."
    mv /home/globalauto/global/.dockerignore $BACKUP_DIR/
    echo "  ‚úÖ .dockerignore movido"
fi

echo ""
echo "üóÇÔ∏è FASE 3: Removendo frontends antigos"
echo "---------------------------------------------"

# Mover frontend antigo (sem o -new)
if [ -d "/home/globalauto/global/frontend" ]; then
    echo "  ‚Üí Movendo frontend/ (vers√£o antiga)..."
    mv /home/globalauto/global/frontend $BACKUP_DIR/
    echo "  ‚úÖ frontend/ movido"
fi

# Mover frontend-backup
if [ -d "/home/globalauto/global/frontend-backup" ]; then
    echo "  ‚Üí Movendo frontend-backup/..."
    mv /home/globalauto/global/frontend-backup $BACKUP_DIR/
    echo "  ‚úÖ frontend-backup/ movido"
fi

echo ""
echo "üßΩ FASE 4: Limpando arquivos √≥rf√£os"
echo "---------------------------------------------"

# Mover shared/templates (n√£o usado)
if [ -d "/home/globalauto/global/shared/templates" ]; then
    echo "  ‚Üí Movendo shared/templates/..."
    mv /home/globalauto/global/shared/templates $BACKUP_DIR/
    echo "  ‚úÖ shared/templates/ movido"
fi

# Mover shared/libs (n√£o usado)
if [ -d "/home/globalauto/global/shared/libs" ]; then
    echo "  ‚Üí Movendo shared/libs/..."
    mv /home/globalauto/global/shared/libs $BACKUP_DIR/
    echo "  ‚úÖ shared/libs/ movido"
fi

# Remover Caddyfile (vest√≠gio de infra antiga)
if [ -f "/home/globalauto/global/Caddyfile" ]; then
    echo "  ‚Üí Movendo Caddyfile..."
    mv /home/globalauto/global/Caddyfile $BACKUP_DIR/
    echo "  ‚úÖ Caddyfile movido"
fi

# Remover turbo.json (monorepo n√£o configurado)
if [ -f "/home/globalauto/global/turbo.json" ]; then
    echo "  ‚Üí Movendo turbo.json..."
    mv /home/globalauto/global/turbo.json $BACKUP_DIR/
    echo "  ‚úÖ turbo.json movido"
fi

# Remover pnpm-workspace.yaml (n√£o usado)
if [ -f "/home/globalauto/global/pnpm-workspace.yaml" ]; then
    echo "  ‚Üí Movendo pnpm-workspace.yaml..."
    mv /home/globalauto/global/pnpm-workspace.yaml $BACKUP_DIR/
    echo "  ‚úÖ pnpm-workspace.yaml movido"
fi

echo ""
echo "üìä FASE 5: Ajustando permiss√µes"
echo "---------------------------------------------"
chown -R globalauto:globalauto /home/globalauto/global/backups/
echo "  ‚úÖ Permiss√µes ajustadas"

echo ""
echo "========================================="
echo "‚úÖ LIMPEZA CONCLU√çDA COM SUCESSO!"
echo "========================================="
echo ""
echo "üìã RESUMO:"
echo "  ‚Ä¢ APIs duplicadas removidas"
echo "  ‚Ä¢ Vest√≠gios Docker removidos"
echo "  ‚Ä¢ Frontends antigos removidos"
echo "  ‚Ä¢ Arquivos √≥rf√£os limpos"
echo ""
echo "üìÅ Backup salvo em: $BACKUP_DIR"
echo ""
echo "üèóÔ∏è ESTRUTURA LIMPA ATUAL:"
echo "  /apps/"
echo "    ‚îî‚îÄ‚îÄ api-python/     ‚úÖ (√∫nica API ativa)"
echo "  /frontend-new/        ‚úÖ (√∫nico frontend ativo)"
echo "  /packages/shared/     ‚úÖ (libs compartilhadas)"
echo ""
echo "‚ö†Ô∏è IMPORTANTE: Teste o sistema:"
echo "  1. Backend: curl http://localhost:8000/health"
echo "  2. Frontend: http://localhost:3000"
echo ""