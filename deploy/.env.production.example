# ========================================
# GLOBALAUTOMATION - PRODUÇÃO
# ========================================
# IMPORTANTE: Copie este arquivo para apps/api-python/.env
# cp deploy/.env.production.example apps/api-python/.env
# Depois edite com suas credenciais REAIS

# ========================================
# 1. APLICAÇÃO
# ========================================
ENV=production
DEBUG=false
PORT=8000
VERSION=1.0.0

# SECRET_KEY - GERE UMA CHAVE FORTE!
# Como gerar: python3 -c "import secrets; print(secrets.token_urlsafe(64))"
SECRET_KEY=SUBSTITUA_POR_UMA_CHAVE_FORTE_DE_64_CARACTERES_AQUI

# ========================================
# 2. JWT (Autenticação)
# ========================================
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# ========================================
# 3. DATABASE (Supabase)
# ========================================
# Acesse: https://supabase.com/dashboard/project/_/settings/database
# Copie a Connection String (modo Transaction)

DATABASE_URL=postgresql+asyncpg://postgres.XXXXX:[SUA-SENHA]@aws-0-sa-east-1.pooler.supabase.com:6543/postgres

# Pool de conexões
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30

# ========================================
# 4. REDIS (Cache)
# ========================================
# Opção 1: Redis local (instalado no servidor)
REDIS_URL=redis://localhost:6379/0

# Opção 2: Redis externo (ex: Redis Labs, Upstash)
# REDIS_URL=redis://default:senha@seu-redis.com:6379

REDIS_MAX_CONNECTIONS=10
REDIS_TIMEOUT=5

# ========================================
# 5. CORS & SEGURANÇA
# ========================================
# Substitua pelos seus domínios reais
CORS_ORIGINS=["https://app.seudominio.com","https://seudominio.com"]
ALLOWED_HOSTS=["seudominio.com","app.seudominio.com","api.seudominio.com"]

# ========================================
# 6. RATE LIMITING
# ========================================
RATE_LIMIT_PER_MINUTE=100
WEBHOOK_RATE_LIMIT_PER_MINUTE=200
AUTH_RATE_LIMIT_PER_MINUTE=500

# ========================================
# 7. ENCRYPTION
# ========================================
# GERE UMA CHAVE DE 32 BYTES!
# Como gerar:
# python3 -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"

ENCRYPTION_KEY=SUBSTITUA_POR_UMA_CHAVE_DE_32_BYTES_BASE64_AQUI

# ========================================
# 8. TRADINGVIEW WEBHOOK
# ========================================
# Secret para validar webhooks do TradingView
# Gere uma string aleatória forte
TV_WEBHOOK_SECRET=SUBSTITUA_POR_UM_SECRET_FORTE_AQUI

# ========================================
# 9. CELERY (Filas - Opcional)
# ========================================
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/1

# ========================================
# 10. MONITORING (Sentry - Opcional)
# ========================================
# Se quiser monitoramento de erros, crie conta grátis em https://sentry.io
# SENTRY_DSN=https://xxxxx@sentry.io/xxxxx
SENTRY_DSN=

# ========================================
# 11. LOGS
# ========================================
LOG_LEVEL=INFO
LOG_FORMAT=json

# ========================================
# NOTAS IMPORTANTES
# ========================================
# 1. NUNCA commite este arquivo com credenciais reais!
# 2. Adicione .env ao .gitignore (já está)
# 3. Guarde backup seguro das credenciais
# 4. Rotacione secrets regularmente
# 5. Use valores diferentes de development!

# ========================================
# COMO GERAR SECRETS FORTES
# ========================================
# SECRET_KEY (64 chars):
#   python3 -c "import secrets; print(secrets.token_urlsafe(64))"
#
# ENCRYPTION_KEY (32 bytes base64):
#   python3 -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
#
# TV_WEBHOOK_SECRET (32 chars):
#   python3 -c "import secrets; print(secrets.token_hex(32))"
