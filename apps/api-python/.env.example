# Environment Configuration Example
# Copy this file to .env and fill in your values

# Application
ENV=development
DEBUG=true
PORT=8000
SECRET_KEY=your-super-secret-key-change-this-in-production
VERSION=1.0.0

# JWT Configuration
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# TradingView Webhook
TV_WEBHOOK_SECRET=your-tradingview-webhook-secret

# Database
DATABASE_URL=postgresql+asyncpg://user:password@localhost:5432/tradingview_gateway
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20

# Redis
REDIS_URL=redis://localhost:6379
REDIS_MAX_CONNECTIONS=10

# Security & CORS
CORS_ORIGINS=["http://localhost:3000","http://localhost:3001"]
ALLOWED_HOSTS=["localhost","127.0.0.1"]

# Rate Limiting
RATE_LIMIT_PER_MINUTE=100
WEBHOOK_RATE_LIMIT_PER_MINUTE=200
AUTH_RATE_LIMIT_PER_MINUTE=500

# Encryption
ENCRYPTION_KEY=your-32-byte-encryption-key-change-this
# Master encryption key for bot secrets and sensitive data (Fernet format - 44 chars base64)
# Generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
ENCRYPTION_MASTER_KEY=your-fernet-key-here-change-this-44-chars

# Monitoring
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Queue (Celery)
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/1

# Exchange API Keys (Encrypted)
# These will be stored encrypted in the database per user/account
# BINANCE_API_KEY=your-binance-api-key
# BINANCE_SECRET_KEY=your-binance-secret-key
# BYBIT_API_KEY=your-bybit-api-key
# BYBIT_SECRET_KEY=your-bybit-secret-key