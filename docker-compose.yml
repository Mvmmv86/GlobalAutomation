version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-globalautomations}
      POSTGRES_DB: ${POSTGRES_DB:-globalautomations}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_password_here}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - global-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-globalautomations}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - global-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Trading Services
  trading-api:
    build:
      context: ./services/trading/api-service
      dockerfile: Dockerfile
    command: python -m uvicorn main:app --reload --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./services/trading/api-service:/app
    working_dir: /app
    networks:
      - global-net
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-globalautomations}:${POSTGRES_PASSWORD:-your_password_here}@postgres:5432/${POSTGRES_DB:-globalautomations}
      - REDIS_URL=redis://redis:6379

  trading-execution-worker:
    build:
      context: ./services/trading/execution-service
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./services/trading/execution-service:/app
    networks:
      - global-net
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-globalautomations}:${POSTGRES_PASSWORD:-your_password_here}@postgres:5432/${POSTGRES_DB:-globalautomations}
      - REDIS_URL=redis://redis:6379

  trading-reconciliation-worker:
    build:
      context: ./services/trading/reconciliation-service
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./services/trading/reconciliation-service:/app
    networks:
      - global-net
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-globalautomations}:${POSTGRES_PASSWORD:-your_password_here}@postgres:5432/${POSTGRES_DB:-globalautomations}
      - REDIS_URL=redis://redis:6379

  # Frontend Services
  trading-dashboard:
    build:
      context: ./frontend/trading-dashboard
      dockerfile: Dockerfile
    command: npm run dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/trading-dashboard:/app
      - /app/node_modules
    working_dir: /app
    networks:
      - global-net
    environment:
      - VITE_API_URL=http://localhost:8000

  # Development Tools
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - global-net
    environment:
      - ADMINER_DEFAULT_SERVER=postgres

volumes:
  pgdata:

networks:
  global-net:
    driver: bridge

